##远程自定义配置
galaxy:
  notCheckLoginUrl: /userLogin,/register,/getSmsVerificationCode,/findBackPasswor,/getInviteList,/getCategoryByParentId,/getUserListBySex,/error,/env/print,/swagger-ui.*,/static.*,/a2billing.*,/favicon.*,/webjars/springfox-swagger-ui.*,/v2/api-docs.*
  amazonProperties:
    accessKey: AKIA2AUK3NDSXMVXAQ6B
    secretKey: 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
    region: us-west-1
    cloudfront_DomainName: d18bri8sapzuu4.cloudfront.net
    imageBucketName: galaxy-image
    videoBucketName: galaxy-video
    image360BucketName: galaxy360image
    video360BucketName: galaxy360video
  upload:
    version: v1.0

server:
  port: 9800
  servlet:
    context-path: /

spring:
  # 数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root
    url: jdbc:mysql://47.100.17.12:3306/galaxy?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
    maxLifetime: 1800000
    maximumPoolSize: 15
  redis:
    # 指定redis 使用2库
    database: 2
    password: 123456
    host: 47.100.17.12
    port: 6379
    timeout: 6000  # 连接超时时长（毫秒）
    pool:
      max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 10      # 连接池中的最大空闲连接
      min-idle: 5       # 连接池中的最小空闲连接
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
  # 配置rabbitmq的地址以及用户密码
  rabbitmq:
    host: 47.100.17.12
    username: galaxy
    password: galaxy

log:
  path : galaxy/upload/logs
  level : info
  ibatis : DEBUG

# 直接放行URL
ignore:
  urls:
  - /*/**
  - /*/info/*
  - /*/**

file:
  staticAccessPath: /upload/images/**
  uploadPath: /home/upload/
  #uploadPath: E:\upload

## 允许/actuator/bus-refresh接口被外部调用
management:
  endpoints:
    web:
      exposure:
        include: "*"

# mybaits配置
mybatis:
  mapper-locations: classpath:/mapper/*.xml

feign:
  hystrix:
    enabled: true


#自定义熔断
hystrix:
  command:
    #"类名#方法名(参数类型1,参数类型2,参数类型n)"   微服务局部处理
    "UploadVideoService#uploadVideo(MultipartFile,String,String,String,String,Integer)": #HystrixCommandKey
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 50000   #熔断器熔断降级时间 设置要大于 connectTimeout + readTimeout 之和
            #假设：连接500毫秒，处理短信4000毫秒，哪个timeOut会触发服务降级
            # 链接   500毫秒 < connectTimeout 1000 正常；处理短信4000 < readTimeout 5000 正常； 但是 (4000 + 500) > 1000 超过了熔断时间。因此超时降级
      circuitBreaker:
        forceOpen: false #true代表强制熔断器强制处于Open状态，即服务不可用
        requestVolumeThreshold: 50
        errorThresholdPercentage: 60
        sleepWindowInMilliseconds: 10000
    # 全局默认的熔断设置
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000
      circuitBreaker:
        #在当20秒的时间内，最近50次调用请求，请求错误率超过60%，则触发熔断10秒，期间快速失败。
        requestVolumeThreshold: 50
        errorThresholdPercentage: 60
        sleepWindowInMilliseconds: 10000
      metrics:
        rollingStats:
          timeInMilliseconds: 20000

ribbon:        #设置ribbon的超时时间小于zuul的超时时间
  ReadTimeout: 10000
  ConnectTimeout: 10000
